spring:
  profiles:
    active:
    - dev
---
server:
  port: 8001
##########################一下为spring增加的配置#########################  
spring:
  profiles: dev
  application:
    #服务提供方注册在eureka中的微服务名称（Instances currently registered with Eureka中的Application），
        #将服务提供方作为作为微服务交由eureka管理，服务消费方获得服务提供方地址由eureka提供
        #ribbon整合服务消费方后可以直接调用服务提供方注册在erueka中的服务名，不用在关心地址和端口号，
        #当服务提供方创建集群时，所有集群下的服务提供方注册在eureka中的微服务名称要统一命名，
        #因为使用ribbon做负载均衡时才让服务消费方负载时均衡调用所有服务提供方
    name: QIQIHAL-provider-dept-config-client
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.43.226:3306/deptdb01?useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true
    type: com.alibaba.druid.pool.DruidDataSource
    username: root
    password: 123456
    #sql-script-encoding: UTF-8

    ###################以下为druid增加的配置###########################
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处是filter修改的地方
    filters:
      commons-log.connection-logger-name: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
###################以下为logback增加的配置###########################
logging:
  config: classpath:logback-boot.xml
    #控制台打印sql
  level:
    com.heilongjiang.mapper: debug    
###################以下为mybatis增加的配置###########################
mybatis:
  configuration:
    #自动转换驼峰标识
    map-underscore-to-camel-case: true
###################以下为Eureka增加的配置###########################
eureka:
  #将服务提供方作为客户端注册进Eureka服务列表内，需要在朱启动类上添加@EnableEurekaClient注解
  client:
    service-url:
      #defaultZone: http://localhost:7001/eureka/ #QIQIHAL-eureka项目中配置的eureka对外暴露的地址（单机）
      defaultZone: http://eureka7001.com:7001/eureka
  instance:
    #修改eureka页面Instances currently registered with Eureka中的	Status，反复修改instance-id的值并重启该服务可以触发eureka自我保护机制
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@
    #访问路径显示IP
    prefer-ip-address: true

info: #访问项目中以info开头的请求显示的内容：
  app.name: QIQIHAL
  company-name: QIQIHAL
  #读取本project中的artifactId标签、version标签的值
  build.artifactId: ${project.artifactId}$
  build.version: ${project.version}$
 